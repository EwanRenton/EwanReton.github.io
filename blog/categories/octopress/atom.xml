<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | Ewan Reton]]></title>
  <link href="http://ewanreton.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://ewanreton.github.io/"/>
  <updated>2016-05-18T15:03:06+08:00</updated>
  <id>http://ewanreton.github.io/</id>
  <author>
    <name><![CDATA[Ewan Reton]]></name>
    <email><![CDATA[liukedi001@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress代码高亮问题（Windows10）]]></title>
    <link href="http://ewanreton.github.io/blog/2016/04/30/octopress-code-highlight/"/>
    <updated>2016-04-30T00:57:01+08:00</updated>
    <id>http://ewanreton.github.io/blog/2016/04/30/octopress-code-highlight</id>
    <content type="html"><![CDATA[<blockquote><p>首先我要用祭出一段代码。。</p></blockquote>

<!--more-->


<pre><code class="php">&lt;?php
    for($i=0;i&lt;100;i++){
    echo "Octopress 的代码高亮真的真的有坑！！！"
}

?&gt;
</code></pre>

<p>之前在写博客的时候就有发现，我的用markdown语法写出来的代码好像是和别人的不一样。后来发现是我的代码没有用高亮。人家也是一个有追求的PHPer（尴尬脸）。我就查markdown语法啊。
语法是这样给我说的</p>

<p><strong>markdown 语法实现代码高亮有两种方法</strong></p>

<pre><code>1  ```[language] [title] [url] [link text]
     code snippet
   ```
2 {\% codeblock [title] [lang:language] [url] [link text] \%}
    code snippet
{\% endcodeblock \%}
</code></pre>

<p>唉，原来这么简单。改代码走起->rake generate ->reke deploy</p>

<p>去看看我可爱的带颜色的代码呢。</p>

<p>！！！！！
为什么我的博客一片空白了！！！</p>

<p>然后我去度娘，去google。。</p>

<p>终于找到跟我一样懵逼的小伙伴<a href="http://www.tuicool.com/articles/myqIba">戳过去同情他</a></p>

<hr />

<blockquote><p>按照这个小伙伴的思路我开始装Python</p></blockquote>

<p>我装的是<a href="https://www.python.org/downloads/release/python-2711/">Python2.7.11</a> 选择 Windows x86-64 MSI installer下载。然后一直下一步安装。</p>

<blockquote><p>安装完成后添加环境变量
<a href="http://www.blogjava.net/lishunli/archive/2012/03/18/372115.html">这个博客可以参考</a>
鼠标右击我的电脑，选择属性，再选择高级系统设置，右下角有一个环境变量，点进去</p></blockquote>

<p><img src="https://pic1.zhimg.com/6afe9ded178646e6c71e0c3fd908bdb8_b.jpg" alt="1" /></p>

<p>找到path项，选择编辑，把你的Python安装路径(如：C:\Python27)输入进去，注意要用一个 ; 符号与前面的路径分开，再点确定就可以了。完事后可以运行cmd，输入python，如下显示就是成功了
<img src="https://pic4.zhimg.com/7c56fca865253473857066067a0c053b_b.jpg" alt="2" /></p>

<blockquote><p>这个时候突然发现了另一篇博文</p></blockquote>

<p>这个博文看起来要简单点<a href="http://www.cnblogs.com/oec2003/archive/2013/05/27/3100896.html">传送门</a></p>

<blockquote><p>按照下一篇博文的方法</p></blockquote>

<pre class="prettyprint linenums">
安装Python
安装Python,也是一路next就可以，博客的代码高亮用到了Python的Pygments模块，在Python中安装第三方库需要使用easy_install，在下面地址下载跟Python相对应的安装程序安装后就可以使用easy_install了。

https://pypi.python.org/pypi/setuptools
easy_install会安装在Python安装目录的Scripts目录中，例如我的Python目录是C:\Python27，所以需要将C:\Python27\Scripts目录加入到环境变量中才能在命令提示符中使用easy_install命令。

在命令提示符中输入如下命令就可以安装Pygments了。

easy_install pygments
</pre>


<p><a href="https://pypi.python.org/pypi/setuptools">https://pypi.python.org/pypi/setuptools</a>去找到Windows (simplified)又懵逼了。它给了一段代码需要自己编译运行<a href="https://bootstrap.pypa.io/ez_setup.py">ez_setup.py</a>新建文本文档将网页上的代码全部粘贴下来，保存重命名为ez_setup.py</p>

<pre class="prettyprint linenums">
 Win+R
 cmd
 进到你刚刚保存的那文件的路径
 python ez_setup.py //安装easy_install
 等到安装完成过后
 将C:\Python27\Scripts目录加入到环境变量中前面的C:\Python27\和你之前添加的Python的环境变量一样
 easy_install pygments
 等到这一步完成后，基本就算大工告成了
</pre>


<p> 如果你还是出现相同问题的话，那请找网管重启机器。</p>

<hr />

<pre><code class="php">&lt;?php
    echo"不出意外的话你的问题也应该解决了。\n"
    echo"你看我是不是一段有颜色的代码啊！";
?&gt;
</code></pre>

<h1>后记</h1>

<blockquote><p>在解决上述问题的过程中，了解到另一种代码高亮的方法</p></blockquote>

<p><a href="http://jingyan.baidu.com/article/67508eb4e660ed9cca1ce4ec.html">请戳这里</a></p>

<p>使用google-code-prettify可以用来很方便地对网页中的程序代码进行高亮显示,从而在视觉上使得网页上的代码看得比较舒服,这对网站站长来说是很重要的。</p>

<p>有两种方法来启用google-code-prettify,下面简要介绍一下步骤。</p>

<blockquote><p>方法一</p></blockquote>

<p>(1) 从<a href="https://code.google.com/p/google-code-prettify/downloads/list%E4%B8%AD%E4%B8%8B%E8%BD%BD%E6%88%96%E8%80%85%E4%BB%8Ehttp://www.colafile.com/file/145953">https://code.google.com/p/google-code-prettify/downloads/list%E4%B8%AD%E4%B8%8B%E8%BD%BD%E6%88%96%E8%80%85%E4%BB%8Ehttp://www.colafile.com/file/145953</a> 中打包下载pretty.css以及pretty.js,并保存到本地服务器的相应目录中来引用</p>

<p>(2) 引用pretty.css以及pretty.js,然后在网页中引用,引用方法为</p>

<pre><code>&lt;link href="你保存的目录/prettify.css" type="text/css" rel="stylesheet" /&gt;

&lt;script type="text/javascript" src="你保存的目录/prettify.js"&gt;&lt;/script&gt;
</code></pre>

<p>(3)</p>

<pre><code>&lt;body&gt;标签改为&lt;body onload="prettyPrint()"&gt;
</code></pre>

<p>(4) 将源代码用标签</p>

<pre><code>&lt;pre class="prettyprint linenums"&gt;这是你的代码&lt;/pre&gt;
</code></pre>

<p>包含起来,例如</p>

<pre><code>&lt;pre class="prettyprint linenums"&gt;

#include "x.h"

main(){

 print("hello world!");

}

&lt;/pre&gt;
</code></pre>

<p>相应的显示效果为:</p>

<h2><img src="http://hiphotos.baidu.com/exp/pic/item/0fb505d5ad6eddc4ef4d78d73bdbb6fd52663331.jpg" alt="3" /></h2>

<blockquote><p>方法二</p></blockquote>

<p>(1) 到网址 <a href="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js">https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js</a> 中或者从<a href="http://www.colafile.com/file/145957">http://www.colafile.com/file/145957</a> 下载run_prettify.js文件</p>

<p>(2) 引用run_prettify.js文件,方法为</p>

<pre><code>&lt;script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"&gt;&lt;/script&gt;
</code></pre>

<p>或者</p>

<pre><code>&lt;script src="你保存的目录/run_prettify.js"&gt;&lt;/script&gt;
</code></pre>

<p>(3) 将源代码用标签</p>

<pre><code>&lt;pre class="prettyprint"&gt;这是你的代码&lt;/pre&gt;
</code></pre>

<p>包含起来,例如</p>

<pre><code>&lt;pre class="prettyprint"&gt;

#include "x.h"

main(){

    print("hello world!");

}

&lt;/pre&gt;
</code></pre>

<p>相应的显示效果为:</p>

<p><img src="http://hiphotos.baidu.com/exp/pic/item/72ccb7773912b31b40ea01058418367adbb4e1de.jpg" alt="4" /></p>

<p>如果你有更高的使用要求，可以到<a href="https://code.google.com/p/google-code-prettify/wiki/GettingStarted">https://code.google.com/p/google-code-prettify/wiki/GettingStarted</a>这个网页中看更高级的使用方法</p>

<hr />

<p>5/17/2016 8:28:40 PM  更新</p>

<blockquote><p>设置显示行号</p></blockquote>

<pre class="prettyprint linenums">
1、删掉prettify里的这两个样式。  
li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}  
  
2、替换以下内容，已经存在的替换，不存在的新增。  
pre.prettyprint {  
 padding: 8px;  
 background-color: #f7f7f9;  
 border: 1px solid #e1e1e8;  
}  
.prettyprint.linenums {  
 -webkit-box-shadow: inset 40px 0 0 #fbfbfc, inset 41px 0 0 #ececf0;  
 -moz-box-shadow: inset 40px 0 0 #fbfbfc, inset 41px 0 0 #ececf0;  
 box-shadow: inset 40px 0 0 #fbfbfc, inset 41px 0 0 #ececf0;  
}  
  
/* Specify class=linenums on a pre to get line numbering */  
ol.linenums {  
 margin: 0 0 0 33px; /* IE indents via margin-left */  
}   
ol.linenums li {  
 padding-left: 12px;  
 color: #bebec5;  
 line-height: 18px;  
 text-shadow: 0 1px 0 #fff;  
}  
3、在pre标签里面一定不能有br/标签,要换行直接回车.  
</pre>


<hr />

<h1>但是</h1>

<p>这种方法在使用过程中，当是PHP代码时：如
<code>php
    &lt;pre class="prettyprint linenums"&gt;
        &lt;?php
            echo "test!";
        ?&gt;
    &lt;/pre&gt;
</code>
这样在实际的显示过程中只有块黑色的代码块，代码并没解析出来。</p>

<p>改成如下格式就能正常实现代码高亮效果。
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'>    <span class="o">&lt;</span><span class="nx">pre</span> <span class="nx">class</span><span class="o">=</span><span class="s2">&quot;prettyprint php&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="c1">//去掉了PHP的开始和结束符</span>
</span><span class='line'>        <span class="k">echo</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">test</span><span class="o">!&amp;</span><span class="nx">rdquo</span><span class="p">;;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>    <span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="o">/</span><span class="nx">pre</span><span class="o">&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="sb">```</span>
</span><span class='line'><span class="sb">我没有去具体研究这个原理，不过我推测是因为PHP的开始副 &amp;lt;?  和pre的开始结束符产生了混乱不能正确匹配，从而导致解析失败。&lt;/p&gt;</span>
</span><span class='line'><span class="sb">]]&gt;&lt;/content&gt;</span>
</span><span class='line'><span class="sb">  &lt;/entry&gt;</span>
</span><span class='line'><span class="sb">  </span>
</span><span class='line'><span class="sb">  &lt;entry&gt;</span>
</span><span class='line'><span class="sb">&lt;title type=&quot;html&quot;&gt;&lt;![CDATA[解决 Octopress 警告 Layout Nil Requested]]&gt;&lt;/title&gt;</span>
</span><span class='line'><span class="sb">&lt;link href=&quot;http://ewanreton.github.io/blog/2016/04/29/fix-octopress-build-warning-layout-nil-requested/&quot;/&gt;</span>
</span><span class='line'><span class="sb">&lt;updated&gt;2016-04-29T23:08:07+08:00&lt;/updated&gt;</span>
</span><span class='line'><span class="sb">&lt;id&gt;http://ewanreton.github.io/blog/2016/04/29/fix-octopress-build-warning-layout-nil-requested&lt;/id&gt;</span>
</span><span class='line'><span class="sb">&lt;content type=&quot;html&quot;&gt;&lt;![CDATA[&lt;blockquote&gt;&lt;p&gt;给Octopress换了主题过后重新generate会出警告Layout Nil Requested。&lt;/p&gt;&lt;/blockquote&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;!--more--&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;p&gt;主要原因是对于 nill 值无法判断导致的问题，只要将有出现错误的档案將 nill 改成 null 即可&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;p&gt;Fix this error by replacing from file:&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;blockquote&gt;&lt;p&gt;layout: nil&lt;/p&gt;&lt;/blockquote&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;p&gt;with:&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;blockquote&gt;&lt;p&gt;layout: null&lt;/p&gt;&lt;/blockquote&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;p&gt;in files:&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;ul&gt;</span>
</span><span class='line'><span class="sb">&lt;li&gt;source/atom.xml&lt;/li&gt;</span>
</span><span class='line'><span class="sb">&lt;li&gt;source/_includes/custom/category_feed.xml&lt;/li&gt;</span>
</span><span class='line'><span class="sb">&lt;/ul&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">]]&gt;&lt;/content&gt;</span>
</span><span class='line'><span class="sb">  &lt;/entry&gt;</span>
</span><span class='line'><span class="sb">  </span>
</span><span class='line'><span class="sb">  &lt;entry&gt;</span>
</span><span class='line'><span class="sb">&lt;title type=&quot;html&quot;&gt;&lt;![CDATA[GIT+Octopress搭建个人博客]]&gt;&lt;/title&gt;</span>
</span><span class='line'><span class="sb">&lt;link href=&quot;http://ewanreton.github.io/blog/2016/04/18/git-plus-octopressda-jian-ge-ren-bo-ke/&quot;/&gt;</span>
</span><span class='line'><span class="sb">&lt;updated&gt;2016-04-18T23:13:10+08:00&lt;/updated&gt;</span>
</span><span class='line'><span class="sb">&lt;id&gt;http://ewanreton.github.io/blog/2016/04/18/git-plus-octopressda-jian-ge-ren-bo-ke&lt;/id&gt;</span>
</span><span class='line'><span class="sb">&lt;content type=&quot;html&quot;&gt;&lt;![CDATA[&lt;h1&gt;GIT+Octopress搭建个人博客&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;!--more--&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;blockquote&gt;&lt;p&gt;新博客的第一篇博客&lt;/p&gt;&lt;/blockquote&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;p&gt;很久以前就想自己搭个博客，今天终于开工了。在网上找了很多的教程和各种各样的框架，wordpress，jekyll等，最后选择了Octopress+Git搭建。&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;h2&gt;一、环境搭建&lt;/h2&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;h3&gt;&lt;a href=&quot;https://git-scm.com/download/&quot;&gt;GIT&lt;/a&gt;:版本管理工具，将代码托管到GIT。&lt;/h3&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;h3&gt;&lt;a href=&quot;http://rubyinstaller.org/&quot;&gt;Ruby+DevKit&lt;/a&gt; ：生成静态页面&lt;/h3&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;h3&gt;&lt;a href=&quot;http://jingyan.baidu.com/article/ca41422fe209271eaf99ed7c.html&quot;&gt;MarkDownPad&lt;/a&gt;：Windows下MarkDown语法编辑器&lt;/h3&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;h4&gt;安装与配置&lt;/h4&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;pre&gt;&lt;code&gt;GIT和Markdown安装直接点击下一步就可以了。</span>
</span><span class='line'><span class="sb">在安装好git过后，桌面或其他位置点击右键GIT Bash 来配置Github账号（需要先注册GITHUB账号）</span>
</span><span class='line'><span class="sb">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;hr /&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;p&gt;1.1配置GITHUB&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;pre&gt;&lt;code&gt;```</span>
</span><span class='line'><span class="nx">git</span> <span class="nx">config</span> <span class="o">--</span><span class="k">global</span> <span class="nx">user_name</span> <span class="s2">&quot;XXXX&quot;</span><span class="c1">//你的github账号</span>
</span><span class='line'><span class="nx">git</span> <span class="nx">config</span> <span class="o">--</span><span class="k">global</span> <span class="nx">user_email</span> <span class="s2">&quot;XXXX&quot;</span><span class="c1">//你的邮箱</span>
</span><span class='line'><span class="nx">ssh</span><span class="o">-</span><span class="nx">keygen</span> <span class="o">-</span><span class="nx">t</span> <span class="nx">rsa</span> <span class="o">-</span><span class="nx">C</span> <span class="s2">&quot;YOUR_EMAIL&quot;</span>
</span></code></pre></td></tr></table></div></figure>
</code></pre>

<p>下面回车默认为空即可</p>

<p>然后在将你系统盘（大多为C盘）->用户->当前用户（就是你装系统的时候给电脑取的名字）->.ssh文件夹下有id_rsa和id_rsa.pub两个文件打开后者全选复制。
添加到你的GITHUB的SSH KEYs （GITHUB登录后的setting里面）</p>

<p>回到你的bash
<code>
ssh -T git@github.com
</code></p>

<p>来测试SSH keYS,提示HI XXX! 则成功</p>

<hr />

<p>1.2配置RUBY</p>

<pre><code>一直下一步在选择安装路径的时候记得勾选第二个选项添加到你的系统路径。  
安装完成后继续安装DevKit，一直下一步即可，记得选择安装目录。
</code></pre>

<p>进到DevKit安装目录，打开Bash</p>

<pre><code>ruby dk.rb init
ruby dk.rb install
</code></pre>

<hr />

<p>1.3安装Octopress</p>

<pre><code>去到你要保存Octopress的位置打开Bash
git clone git：//github.com/imathis/octopress.git octopress//获取Octopress
cd octopress
gem sources -a https://ruby.taobao.org//添加国内RUBY软件源。在WINDOWS系统下有可能会失败 提示SSL错误。
</code></pre>

<p>建议使用
$ bundle config mirror.<a href="https://rubygems.org">https://rubygems.org</a> <a href="https://gems.ruby-china.org">https://gems.ruby-china.org</a>
<a href="https://gems.ruby-china.org/">参考网址</a></p>

<hr />

<pre><code>gem install bundler
bundler install
rake install
</code></pre>

<p>以上步奏完成并无ERROR则环境搭建成功</p>

<p>rake genreate //生成静态页面</p>

<p>rake preview //这行代码会在本地打开4000端口作为测试</p>

<p>你可以打开浏览器 输入 localhost：4000 来访问你的站点。</p>

<h4>生成博客与单页面</h4>

<hr />

<p>1.新建博客</p>

<pre><code>rake new_post["title"] //生成名为title的博客
</code></pre>

<hr />

<p>2.新建单页面</p>

<pre><code> rake new_page[test]//会生成source/test/index.markdown
 rake new_page[test/page.html]//会生成source/test/page.html
</code></pre>

<p>需要使用markdown语法来书写博客</p>

<hr />

<p>3.生成并本地预览</p>

<pre><code>rake generate
rake preview //http://localhost:4000
</code></pre>

<h4>部署网站到GITHUB</h4>

<hr />

<p>1.新建仓库</p>

<pre><code>username.github.io
</code></pre>

<hr />

<p>2.与本地Octopress 目录绑定</p>

<pre><code>rake setup_github_pages//这里会需要你输入你的GITHUB地址，请输入：git@github.com:yourname/yourname.github.com.git (将yourname替换成你的github登录名)
</code></pre>

<p>注意:这一步不要输入提示中提示的以io结束的地址。
    rake deploy</p>

<p>成功过后就可以通过访问
username.github.io 来访问你的个人博客了</p>

<hr />

<p>PS： 第一次用自己搭的博客写博客，markdown语法用起来也不太熟悉。</p>
]]></content>
  </entry>
  
</feed>
